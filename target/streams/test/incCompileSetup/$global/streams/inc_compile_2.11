format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.8
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
5 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.class
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1$$anonfun$apply$1$$anonfun$apply$3.class
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1$$anonfun$apply$1.class
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1.class
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest.class
binary dependencies:
4 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/.ivy2/cache/org.specs2/specs2-common_2.11/jars/specs2-common_2.11-3.9.5.jar
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/.ivy2/cache/org.specs2/specs2-core_2.11/jars/specs2-core_2.11-3.9.5.jar
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> /Users/akushka/.ivy2/cache/org.specs2/specs2-matcher_2.11/jars/specs2-matcher_2.11-3.9.5.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeService
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
5 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeServiceTest
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeServiceTest$$anonfun$1
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeServiceTest$$anonfun$1$$anonfun$apply$1
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeServiceTest$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeServiceTest$$anonfun$1$$anonfun$apply$1$$anonfun$apply$3
used names:
34 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> <byname>
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> <init>
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> <refinement>
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> Any
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> AnyRef
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> AsResult
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> BlockExample
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> Fragment
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> M
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> MatchResult
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> Matcher
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> MustExpectable
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> Nothing
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> Predef
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> R
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeService
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> SomeServiceTest
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> Specification
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> String
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> T
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> _$1
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> blockExample
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> in
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> matchResultAsResult
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> matcher
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> must
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> mutable
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> org
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> returnMessage
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> service
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> should
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> specs2
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> startWith
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> theValue
product stamps:
5 items
/Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1$$anonfun$apply$1$$anonfun$apply$2.class -> lastModified(1506341456000)
/Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1$$anonfun$apply$1$$anonfun$apply$3.class -> lastModified(1506341456000)
/Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1$$anonfun$apply$1.class -> lastModified(1506341456000)
/Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest$$anonfun$1.class -> lastModified(1506341456000)
/Users/akushka/Projects/codacy-issue/target/scala-2.11/test-classes/SomeServiceTest.class -> lastModified(1506341456000)
source stamps:
1 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> hash(a28be12329b825bbdf4e367af8c478cd47f8db85)
binary stamps:
4 items
/Users/akushka/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar -> lastModified(1457105192000)
/Users/akushka/.ivy2/cache/org.specs2/specs2-common_2.11/jars/specs2-common_2.11-3.9.5.jar -> lastModified(1503900433000)
/Users/akushka/.ivy2/cache/org.specs2/specs2-core_2.11/jars/specs2-core_2.11-3.9.5.jar -> lastModified(1503900034000)
/Users/akushka/.ivy2/cache/org.specs2/specs2-matcher_2.11/jars/specs2-matcher_2.11-3.9.5.jar -> lastModified(1503900356000)
class names:
4 items
/Users/akushka/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar -> scala.Predef$
/Users/akushka/.ivy2/cache/org.specs2/specs2-common_2.11/jars/specs2-common_2.11-3.9.5.jar -> org.specs2.execute.AsResult
/Users/akushka/.ivy2/cache/org.specs2/specs2-core_2.11/jars/specs2-core_2.11-3.9.5.jar -> org.specs2.mutable.Specification
/Users/akushka/.ivy2/cache/org.specs2/specs2-matcher_2.11/jars/specs2-matcher_2.11-3.9.5.jar -> org.specs2.matcher.StringBaseMatchers
internal apis:
1 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> 

external apis:
1 items
SomeService -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwvTYglgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwHuXAenQABm5vdGlmeXNxAH4ADNUmDyt0AAR3YWl0c3EAfgAMI8KIF3QADSRhc0luc3RhbmNlT2ZzcQB+AAzLjjGEdAAGZXF1YWxzc3EAfgAMH9fj6HQADGFzSW5zdGFuY2VPZnNxAH4ADFsJj5J0AAxzeW5jaHJvbml6ZWRzcQB+AAzcAz3AdAANJGlzSW5zdGFuY2VPZnNxAH4ADGbav7d0AAlub3RpZnlBbGxzcQB+AAx8sbzddAANcmV0dXJuTWVzc2FnZXNxAH4ADM8mTeh0AAxpc0luc3RhbmNlT2ZzcQB+AAzA2KxgdAAGPGluaXQ+c3EAfgAMERKgcHQAAj09c3EAfgAMte2bL3QABWNsb25lc3EAfgAMiCbNj3QACHRvU3RyaW5nc3EAfgAM95oeKHQAAiE9c3EAfgAMqG/+Q3QACGdldENsYXNzc3EAfgAMYE6mDnQAC1NvbWVTZXJ2aWNlc3EAfgAMoFh3iHQAAm5lc3EAfgAMfyX5+nQAAmVxc3EAfgAM+KfJLnQAAiMjc3EAfgAMfZjICXQACGZpbmFsaXplc3EAfgAMnw0VLXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgAvdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFpzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBfc3EAfgBadXEAfgA+AAAAAHNxAH4AWnVxAH4APgAAAABzcQB+AFp1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AF50AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AF5zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AHd0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHhzcQB+AGt0AANBbnlzcQB+AG9zcQB+AHJ1cQB+AHUAAAACc3EAfgB3dAAFc2NhbGFxAH4AfnVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFeuPJm8XVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AD4vVXNlcnMvYWt1c2hrYS9Qcm9qZWN0cy9jb2RhY3ktaXNzdWUvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFPKjdU3w1EF8ysWRRqlp4tFmMIxF
source infos:
1 items
/Users/akushka/Projects/codacy-issue/src/test/scala/SomeServiceTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXrjyhzF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQy9Vc2Vycy9ha3VzaGthL1Byb2plY3RzL2NvZGFjeS1pc3N1ZS90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
